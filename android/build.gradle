apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'

group = 'expo.modules.yoco'
version = '0.1.0'

buildscript {
  def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
  if (expoModulesCorePlugin.exists()) {
    apply from: expoModulesCorePlugin
    applyKotlinExpoModulesCorePlugin()
  }

  // Simple helper that allows the root project to override versions declared by this library.
  ext.safeExtGet = { prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }

  // Ensures backward compatibility
  ext.getKotlinVersion = {
    if (ext.has("kotlinVersion")) {
      ext.kotlinVersion()
    } else {
      ext.safeExtGet("kotlinVersion", "1.8.10")
    }
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${getKotlinVersion()}")

    classpath("org.jfrog.buildinfo:build-info-extractor-gradle:latest.release")
  }
}

apply plugin: "com.jfrog.artifactory"

afterEvaluate {
  publishing {
    publications {
      release(MavenPublication) {
        from components.release
      }
    }
    repositories {
      maven {
        url = mavenLocal().url
      }
    }
  }
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 33)

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_17.majorVersion
  }

  buildFeatures {
    dataBinding true
  }

  namespace "expo.modules.yoco"
  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 21)
    targetSdkVersion safeExtGet("targetSdkVersion", 33)
    versionCode 1
    versionName "0.1.0"
  }
  lintOptions {
    abortOnError false
  }
  publishing {
    singleVariant("release") {
      withSourcesJar()
    }
  }
}

repositories {
  mavenCentral()
}

allprojects {
  repositories {
    mavenCentral()
    // Include the Payments SDK (related dependencies)
    maven { url 'https://yocotechnologies.jfrog.io/artifactory/public/' }
  }
}

dependencies {
  def yoco_sdk_version = "2.5.13"
  def ono_sdk_version = "2.3.23"

  implementation project(':expo-modules-core')
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${getKotlinVersion()}"

  implementation "com.yoco.ono.common:onoSdkAndroidWrapper:$ono_sdk_version"
  implementation "com.yoco.ono.android:onoAndroid:$ono_sdk_version"

  if (rootProject.ext.has("yocoDevice") ? rootProject.ext.get("yocoDevice") : false) {
    project.logger.info('Adding Yoco device dependencies')

    implementation "com.yoco:payment-ui-kozen:$yoco_sdk_version"
    implementation "com.yoco.ono.android:kozen:$ono_sdk_version"
  } else {
    implementation "com.yoco:payment-ui:$yoco_sdk_version"
    implementation "com.yoco.ono.common:datecs:$ono_sdk_version"
    implementation "com.yoco.ono.common:miura:$ono_sdk_version"
    implementation "com.yoco.ono.common:dspread:$ono_sdk_version"
    implementation "com.yoco.ono.common:bluetooth:$ono_sdk_version"
    implementation "com.yoco.ono.common:client:$ono_sdk_version"
  }
}